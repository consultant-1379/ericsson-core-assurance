{{- if .Values.createAssuranceRole.enabled -}}
{{- $global := .Values.global -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "eric-service-assurance.name" . }}-create-group-hook
  labels:
    {{- include "eric-service-assurance.labels" .| nindent 4 }}
  annotations:
  {{- include "eric-service-assurance.helm-annotations" .| nindent 4 }}
    "helm.sh/hook": post-install, post-upgrade, post-rollback
    "helm.sh/hook-weight": "20"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: {{ template "eric-service-assurance.name" . }}
    spec:
      imagePullSecrets:
        - name: {{ $global.pullSecret | quote }}
      restartPolicy: Never
      {{- if .Values.tolerations }}
      tolerations:
        {{- include "eric-service-assurance.tolerations" . | nindent 6 }}
      {{- end }}
      containers:
        - name: eric-esoa-iam-client
          image: {{ template "eric-service-assurance.imagePath" (merge (dict "imageName" "eric-esoa-iam-client") .) }}
          imagePullPolicy: {{ $global.registry.imagePullPolicy | quote }}
          env:
          - name: IAM_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: {{ $global.iam.adminSecret | quote }}
                key: {{ $global.iam.userKey | quote }}
          - name: IAM_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $global.iam.adminSecret | quote }}
                key: {{ $global.iam.passwordKey | quote }}
          args:
          - "create"
          - "group"
          - "--keycloak_hostname={{ $global.hosts.iam }}"
          - "--keycloak_user=$(IAM_ADMIN_USER)"
          - "--keycloak_password=$(IAM_ADMIN_PASSWORD)"
          - "--config=/config/group.json"
          volumeMounts:
          - name: create-group-volume
            mountPath: /config
          - name: create-cacert-volume
            mountPath: /mnt/certs
      {{- include "eric-service-assurance.nodeSelector" .| indent 6 }}
      volumes:
      - name: create-group-volume
        configMap:
          name: {{ template "eric-service-assurance.name" . }}-group-configmap
          defaultMode: 0777
      - name: create-cacert-volume
        secret:
          secretName: {{ $global.iam.cacert.secretName }}
          items:
            - key: {{ $global.iam.cacert.key }}
              path: {{ $global.iam.cacert.filePath }}
{{- end -}}
